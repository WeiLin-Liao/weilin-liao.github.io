{"pages":[{"title":"About Me","text":".heimu { color: #000; background-color: #000; } .heimu:hover { color: #fff; } 95后一个不会玩游戏的开发者、性格偏内向很多时候一开机一天就过去了先前从事 前端开发 岗位、日后想要从事后端开发相关的岗位 如 Java开发理想的工作地点是 &nbsp;&nbsp;&nbsp;上海&nbsp;&nbsp;&nbsp; 梦想是 &nbsp;&nbsp;&nbsp;实现财富自由&nbsp;&nbsp;&nbsp; 兴趣爱好：学习、电子数码、旅游、逛逛知乎B站 本博客采用 Hexo 搭建、主题使用的是 Icarus Version 4.0.0、评论系统采用 Valine 、服务器采用 阿里云学生服务器套餐、主题之外的功能是参考 removeif 自行添加上去的 最近在搞微信公众号，欢迎大家多多关注哦 ( • ̀ω•́ )✧ &nbsp; &nbsp; &nbsp; &nbsp; 计划清单：2021 PLAN LIST 💪多交流 多沟通 多交朋友 坚持跑步 多去外面走走 不要那么宅 尽量每天发一篇公众号 多学点技术坚持写博客 改掉和别人笑嘻嘻的毛病 变得更自信 学习英语 背单词 学完购买的英语课程并有所成长 学习Java、Spring Boot 独立开发一个项目 学习理财知识 懂得分析基金股票 如何选择基金 学习营销引流的知识 小目标公众号关注人数做到500+ 不在做舔 🐕 (ง •_•)ง 到最后应有尽有 更新日志： # updateTime updateContent # 2021-02-10 重新编写了 About 页面 添加 留言 左邻右舍 new 板块 # 2021-02-09 更换 logo 添加 随机背景 | 备案号 | 一键换肤 | 搜索拼英索引 功能 # 2021-02-07 Icarus Version 2.6.0 升级到 4.0.0 # 2020-01-07 添加 Valine 留言 | 回复@邮件通知 功能 # 2019-05-06 添加 Live2d 二次元看板娘插件 # 2019-03-10 从 old 迁移至本博客 Icarus Version：2.6.0 关于博客： 建立本博客的目的是为了记录本人的一些个人经历及生活感想。 本博客内容仅代表作者本人的一些看法观念内容仅供阅读不代表其他。 如果您对本博客感兴趣或者正在学习前端的道路上，欢迎您加入讨论群共同进步。","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"左邻右舍","text":".article .content{overflow-x:hidden}.friends{display:flex;align-items:stretch;justify-content:space-between;flex-wrap:wrap;margin:-6px}.friends .friend{margin:6px;min-width:300px;flex:1;display:flex;align-items:center;border-radius:5px;border:1px solid #e2e2e2}.night .friends .friend{border-color:#434a56}.friends .friend .friend-avatar{flex-shrink:0;margin:8px;width:80px;height:80px;border-radius:40px;background-color:#e2e2e2;background-size:cover;background-position:center;font-size:32px;line-height:80px;text-align:center}.friends .friend .friend-detail{flex:1;display:flex;flex-direction:column;margin-top:12px;margin-right:12px;margin-bottom:12px;line-height:26px} 加载中，稍等几秒… 申请友链须知 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片访问不了图片会替换成默认图。 本站友链信息如下，申请友链前请先添加本站信息：网站图标：https://reself.oss-cn-beijing.aliyuncs.com/uploads/avatar/avatar.jpeg网站名称：Reself’s Blog (ง •_•)ง ☀网站地址：https://xiaobaicai.fun网站简介：我的童话深林不在阴雨绵绵","link":"/friends/index.html"},{"title":"留言板","text":"留下你的足迹证明你来过这里！","link":"/message/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Hexo主题themes&#x2F; 文件夹无法提交到GitHub的解决方法","text":"好久没写博客了最近在家里闲着无聊想把hexo搭建的博客用git来托管实现电脑的同步管理以前都是在笔记本电脑里写 现在回到家更喜欢用台式机so 就有了这样的想法 🆗 现在开始折腾 一、遇到的问题因为themes/hexo-theme-icarus也是从仓库里拉取下来的 他关联到了作者的git仓库所以提交不上去 123456789101112C:\\Users\\WeiLin\\Desktop\\weilin-liao.github (master -&gt; origin)λ git statusOn branch masterYour branch is up to date with 'origin/master'.Changes not staged for commit: (use &quot;git add &lt;file&gt;...&quot; to update what will be committed) (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory) (commit or discard the untracked or modified content in submodules) modified: themes/hexo-theme-icarus (modified content, untracked content)no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;) 二、解决方案 从暂存区删除该文件夹 1git rm --cache themes/主题文件名 比如我的是主题是 hexo-theme-icarus 1git rm --cache themes/hexo-theme-icarus 把 themes/hexo-theme-icarus/.git文件夹到放到位置 比方说桌面记得把 themes/hexo-theme-icarus/.gitignore里的 _config去掉 git status查看当前状态 123456789101112C:\\Users\\WeiLin\\Desktop\\weilin-liao.github (master -&gt; origin)λ git statusOn branch masterYour branch is up to date with 'origin/master'.Changes to be committed: (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage) deleted: themes/hexo-theme-icarusUntracked files: (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed) themes/ 直接按步骤提交就行了 123git add .git commit -m &quot;add themes&quot;git push 后面再把刚刚的.git文件夹移动回去 🆗🆗折腾完了 干饭去了","link":"/passages/2021/02/04/Hexo%E4%B8%BB%E9%A2%98themes-%E6%96%87%E4%BB%B6%E5%A4%B9%E6%97%A0%E6%B3%95%E6%8F%90%E4%BA%A4%E5%88%B0GitHub%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"},{"title":"js+thinkphp 实现jsonp跨越","text":"1、使用js创建script动态插入页面1234567891011// 用来创建script标签(function() { // 创建一个script标签 var script = document.createElement('script'); // 指定script的类型 script.type = 'text/javascript'; // 定义script请求的链接 后面加上callBack 请求成功后的回调 script.src = 'http://test.com/public/index.php/index/index/index?resume=all&amp;callBack=jsonp'; // 把创建的标签插入到body的前面 document.body.firstElementChild.append(script);}()) 2、创建该方法用来接收后台传过来的数据12345// （response）参数 用来接收后台传过来的数据// jsonp 为函数名 可以自定义 但是必须和callBack后面的值一样function jsonp(response) { console.log(response)} 3、服务器端代码 后端接收前端传过来的callBack方法名 然后返回jsonp(data) 执行并把后台查找到的数据放在方法里面这就是jsonp实现跨越的精髓 1234567891011121314151617181920212223&lt;?phpnamespace app\\index\\controller;use think\\Controller;use think\\Request;use think\\Db;class Index extends Controller{ public function index() { $request = Request::instance(); if($request -&gt; GET()) { // 接收自定义的参数 $resume = input('resume'); // 接收前端定义的回调函数 $callBack = input('callBack'); if($resume == 'all') { // 这里表示需要全部简历信息 $data = json_encode(Db::name('resume')-&gt;select()); echo $callBack.'('.$data.')'; // 返回用户定义的方法名 加上括号 里面把数据放进去 前端接收到会执行 } }} 4、最后前端就可以得到想要的数据了","link":"/passages/2019/06/14/js+thinkphp%20%E5%AE%9E%E7%8E%B0jsonp/"},{"title":"vuex学习笔记","text":"1. 安装vuex1npm install vuex --save 2. 导入vuex创建store对象1234567891011// store/index.jsimport Vue from 'vue'import Vuex from 'vuex'Vue.use(Vuex)export default new Vuex.Store({ state: { count: 0 }}) 3. 将Store挂载到vue实例12345678910// main.jsimport store from './store'new Vue({ el: '#app', store, components: { App }, template: '&lt;App/&gt;'}) 4. 核心概念 1. State 访问State数据的第一种方式 1&lt;view&gt;{{$store.state.count}}&lt;/view&gt; 1this.$store.state.count += 1 访问State数据的第二种方式 12345import { mapState } from 'veux'computed: { ...mapState(['count'])} 1&lt;view&gt;{{count}}&lt;/view&gt; 2. Mutation（只支持同步操作） 第一种方式 123456789101112// store/index.jsexport default new Vuex.Store({state: { count: 0},mutations: { add (state, step) { state.count += step }}}) 1234567891011// components/.vuemethods: { add () { // 触发mutations this.$store.commit('add', 1) }, del () { this.$store.commit('del', 1) }} 第二种方式 12345678910111213141516// components/.vue// 导入mapMutations函数import { mapMutations } from 'vuex'methods: { // 将mapMutations映射到当前组件 ...mapMutations(['add', 'del']), // 直接调用即可 tapEvent () { this.add() this.del() }} 3. Action（支持异步操作） 第一种方法 1234567891011121314151617181920// store/index.jsexport default new Vuex.Store({ state: { count: 0 }, mutations: { add (state, step) { state.count += step } }, actions: { addSync (context) { setTimeout(() =&gt; { // 通过触发Mutations的方式间接变更数据 context.commit('add') }, 1000) } }}) 12345678// components/.vuemethods: { handle () { // 触发actions this.$store.dispatch('addSync') }} 第二种方法 123456789101112// 导入mapActions函数import { mapActions } from 'vuex'// 将函数映射为当前组件的methods中methods: { ...mapActions(['addSync']), handle () { this.addSync(1) }} 4. Getter 第一种方法 123456789101112// store/index.jsexport default new Vuex.Store({ state: { count: 0 }, getters: { showCount (state) { return state.count } }}) 123// 访问this.$store.getters.showCount() 第二种方法 1234567import { mapGetters } from 'vuex'computed: { ...mapGetters(['showCount'])}this.$store.getters.showCount() 1&lt;view&gt;{{showCount}}&lt;/view&gt;","link":"/passages/2020/04/02/vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"title":"使用git推送项目至远程仓库GitHub教程","text":"一、下载安装并配置git 首先我们得先安装git点击进入Git官网进行下载根据对应的系统选择对应的版本，在这里我选择64-bit Git for Windows Setup. 这个版本 下载挺慢的 耐心等待一下，下载完成后直接双击 下一步下一步进行安装 默认选择就行安装完成后 打开cmd输入 git --version此时显示出git的版本号就证明安装成功 安装成功后我们来设置一下配置项 12git config --global user.email &quot;Your email&quot; // 输入你的名称git config --global user.name &quot;Your name&quot; // 输入你的邮箱 输入后直接按回车 使用git config --list来查看我们的配置 可以看到刚刚我们设置的已经生效了 二、注册guithub账号并新建一个项目 直接进入GitHub官网进行注册进去后点击Sign up进行注册，在这里我将不带大家注册了 注册成功后我们来新建一个项目 点击new 输入名称 hello-world Description描述我就不填了 选public公开 然后点击Create repository 创建好后我们复制这个链接后面要用到 三、把项目克隆到本地把远程项目克隆到本地使用git clone 项目地址命令 1git clone Your url // Your url 这里是要克隆项目的地址 就是刚刚我们复制的 我们选择一个存放的目录 执行 git clone https://github.com/WeiLin-Liao/hello-world.git 把项目克隆到本地 克隆成功后目录下将会出现一个文件夹 四、创建文件并推送 我们输入 echo &quot;hello-world&quot; &gt;&gt; README.md创建一个文件输入dir来查看目录下的文件列表 可以看到目录多了一个README.md 首先我们使用git status来查看当前所在的分支可以看到当前位于master分支 并且没有提交 现在我们来把刚刚创建的文件提交一下使用git add README.md来添加单个文件 或者使用git add.代表添加目录下的所以文件使用git commit -m &quot;输入提交的注释说明&quot;来添加到待提交使用git push origin master 来推送到项目的主分支master上 此时项目已经提交上去了 注意：以上操作可能会弹出GitHub登录界面直接登录就行 五、创建新分支 在现实开发当中我们往往有些项目需要更新迭代为了能和老版本区分开来这是我们可以创建新的分支使用git checkout -b 分支名称创建新的分支可以使用git branch -a来查看所有分支我们这里新增一个文件并推送到刚刚创建的production分支上去 此时我们打开github可以看到多了一个分支 六、合并分支 我们先切换到需要合并分支的代码中去使用git checkout 分支名切换到master分支使用git merge 分支名合并分支 七、删除分支 删除分支使用git branch -d 分支名删除后使用git push origin :production 冒号代表本地为空的意思 提交至仓库 此时GitHub只剩下一个分支了 八、回退版本使用git reflog命令打开提交日志123456$ git reflog5404fae (HEAD -&gt; master, origin/master) HEAD@{0}: merge production: Fast-forwardc6c1467 HEAD@{1}: checkout: moving from production to master5404fae (HEAD -&gt; master, origin/master) HEAD@{2}: commit: 测试分支c6c1467 HEAD@{3}: checkout: moving from master to productionc6c1467 HEAD@{4}: commit (initial): 第一次提交 使用git reset--hard id来进行回退id这里输入要回退的版本号","link":"/passages/2019/03/16/%E4%BD%BF%E7%94%A8git%E6%8E%A8%E9%80%81%E9%A1%B9%E7%9B%AE%E8%87%B3%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93GitHub/"},{"title":"单招数学-集合与集合的概念","text":"1.1.1、集合基础知识 定义：一般我们把研究对象统称为 元素 ，一些元素组成的总体叫 集合 ，也简称 集 。 表示方法：集合通常用大括号{ }或大写的拉丁字母 A,B,C… 表示，元素用小写的拉丁字母 a,b,c… 表示。 关于集合的元素的特征： （1） 确定性 ：给定一个集合，那么任何一个元素在或不在这个集合中就确定了； （2） 互异性 ：一个集合中的元素是互不相同的，即集合中的元素是不重复出现的； （3） 无序性 ：即集合中的元素无顺序,可以任意排列、调换。 元素与集合的关系：(元素与集合的关系有“属于”及“不属于”两种) （1）若a是集合A中的元素，则称a属于集合A，记作： a∈A ； （2）若a不是集合A的元素，则称a不属于集合A，记作： a∉A 。 集合的表示方法： （1） 列举法 ：把集合中的元素一一列举出来, 并用花括号括起来表示集合的方法叫列举法； （2） 描述法 ：用集合所含元素的共同特征表示集合的方法，称为描述法； （3） 图像法 ：画一条封闭的曲线,用它的内部来表示一个集合。 常见的集合集合 | 字母符号 | 表示 |:-:|:-:|:-:|自然数集 | N | {0,1,2,3,…}正整数集 | N*或N+ | {1,2,3,…}整数集 | Z | {…,-1,0,1,…}有理数集 | Q | ~实数集 | R | ~负数集 | C | ~空集 | ∅ | ~ 1.1.2、集合的基本关系 子集 ：对于两个集合A、B，如果集合A中任意一个元素都是集合B 中的元素，则称 集合 A是集合B 的子集。记作 A⊆B 。 真子集 ： 如果集合 A⊆B ，但存在元素 x∈B ，且 x∉A，则称集合A是集合B的真子集。记作： A⊊B 。 空集 ：把不含任何元素的集合叫做空集.记作： ∅ 。并规定：空集合是任何集合的子集。 计算方式： 子集：zn个 真子集：2n-1个 非空真子集：2n-2个 [ ] 例题1：A = {1,2,3} 子集个数：2x2x2=8 真子集个数：2x2x2-1=7 非空真子集：2x2x2-2=6 [ ] 例题二：A={1,2,3,4} 子集个数：2x2x2x2=16 真子集个数：2x2x2x2-1=15 非空真子集个数：2x2x2x2-2=14 1.1.3、集合间的基本运算 交集 ：由属于集合A 且属于集合B的所有元素组成的集合，称为 A 与B 的交集.记作： A∩B 并集 ：由所有属于集合A或集合 B的元素组成的集合，称为集合A与B的并集.记作： A∪B [ ] 例题：设集合A=｛1,3,5,6｝，集合B=｛2,3,4,5｝。求A ∪B 和A ∩ B？ 求交集：取两个集合相同的元素重新组成一个新集合。 A ∩ B = {3,5} 求并集：取两个集合所有的元素重新组成一个新集合。 A u B = {1,2,3,4,5,6}","link":"/passages/2020/02/05/%E5%8D%95%E6%8B%9B%E6%95%B0%E5%AD%A6-%E9%9B%86%E5%90%88%E4%B8%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%A6%82%E5%BF%B5/"},{"title":"博客搜索功能已支持拼音检索文章","text":"最近逛博客看到了一个小功能感觉很不错 自己也折腾了一下 前提 Icarus 版本 3.0 以上 搜索插件使用的是 Insight 参考链接 https://www.imaegoo.com/2020/icarus-insight-pinyin/","link":"/passages/2021/02/09/%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%B7%B2%E6%94%AF%E6%8C%81%E6%8B%BC%E9%9F%B3%E6%A3%80%E7%B4%A2%E6%96%87%E7%AB%A0/"},{"title":"宝塔一键迁移-请先安装Pure-Ftpd","text":"记录一下宝塔一键迁移 提示请先安装Pure-Ftpd问题查了下没有找到合适的解决方法 后面自己尝试决绝的 提示这个 直接在另一台服务器安装 FileZilla Server 即可","link":"/passages/2021/03/09/%E5%AE%9D%E5%A1%94%E4%B8%80%E9%94%AE%E8%BF%81%E7%A7%BB-%E8%AF%B7%E5%85%88%E5%AE%89%E8%A3%85Pure-Ftpd/"},{"title":"总结一下这几天遇到的面试题","text":"css如何切换盒模型____。 1box-sizing: border-box / content-box; 0.1 + 0.2 == 0.3_______。 1false HTML5中js新增的选择器api__、____。 12document.querySelector()document.querySelectorAll() HTML5新增的标签有哪些。 12345678&lt;nav&gt;&lt;/nav&gt;&lt;vedio&gt;&lt;/vedio&gt;&lt;aside&gt;&lt;/aside&gt;&lt;header&gt;&lt;/header&gt;&lt;footer&gt;&lt;/footer&gt;&lt;canvas&gt;&lt;/canvas&gt;&lt;section&gt;&lt;/section&gt;&lt;article&gt;&lt;/article&gt; 写出让#move在wrapper正中央的所有方法。 123&lt;div id=&quot;parent&quot;&gt; &lt;div id=&quot;move&quot;&gt;&lt;/div&gt;&lt;/div&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142431. flex布局#parent { displey: flex; justify-content: center; item-aligns: center;}2. table-cell布局#parent { display: table-cell; vertical-align: middle; text-align: center;}#move { display: inline-block;}3. position#parent { position: relative;}i.#move { position: absolute; top: 0; left: 0; bottom: 0; right: 0; margin: auto;}ii.#move { position: absolute; left: 50%; top: 50%; margin-top: -50px; margin-left: - 50px;}iii. #move { position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%)} 写出你所知道清除浮动的方式并说明优缺点。 1231. 额外标签法&lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;缺点：影响代码质量，不符合标准 1234562. 触发BFC实现清除浮动{ overflow: hidden;}优点：代码简洁缺点：需要显示的内容会被隐藏 12345678910111213143. 伪类清楚浮动.clearfix:after,.clearfix:before { content: &quot;&quot;; display: block; height: 0; clear:both; visibility: hidden;}.clearfix { *zoom: 1; /*ie6清除浮动的方式 *号只有IE6-IE7执行}缺点：ie6-ie7不支持伪类优点：代码简洁，符合标准 完成一下代码使程序能够正常输出。 12345678910function test (_arr, _e) { ... }var arr = [1,2,3,4,5]if (test(arr, 1) === 0 &amp;&amp; test(arr, 6) === -1) { console.log('小没没')} 123function test (_arr, _e) { return _arr.indexOf(_e)} js常见的数据类型。 12基本数据类型：Number、String、Boolean、undefined、null引用数据类型：Array、Object、Function、Date、RegExp 写一个闭包的例子。 123456789101112131415161718function test () { var arr = [] for (var i = 0; i &lt; 10; i ++) { arr[i] = (function (i) { console.log(i) }(i)) } return arr}var myArr = test()for (var j = 0; j &lt; 10; j ++) { myArr[j]()} 使用常见的方法给btn添加一个thisClick()事件1&lt;div id=&quot;btn&quot;&gt;&lt;/div&gt; 12345678910111213var btn = document.getElementById('btn')1. btn.onclick = function () { thisClick()}2. btn.addEventlistener('click', thisClick, false)3. $('#btn').click(thisClick())4. $('#btn').on('click', thisClick)5. $('#btn').bind('click', thisClick) vue生命周期。1234567891011121314151617181920212223242526272829303132// 创建前状态beforeCreate () { }// 创建完毕状态created () { }// 挂载前状态beforeMount () { }// 挂载结束状态mounted () { }// 更新前状态beforeUpdate () { }// 更新完成状态updated () { }// 销毁前状态beforeDestroy () { }// 销毁完成状态destroy () { }","link":"/passages/2020/04/04/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B%E8%BF%99%E5%87%A0%E5%A4%A9%E9%81%87%E5%88%B0%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"title":"时隔四年重回Deepin","text":"第一次接触深度系统是在学校的时候，那个时win7用过一段时间后会很卡，所以在那时候就想经常换系统，想找个好点的系统来玩玩。每次装完新系统都会把桌面弄得整整齐齐的，一些基本的驱动、软件都会全部安装好，然后就是把一些没用的启动项都禁止基本上就很完美了。 随着后面的软件越装越多，慢慢的系统也就越来越卡了，特别是打开explorer的时候圈圈一直转。然后就这样重复重装系统。期间一直装的都是win7，也用一段时间win8感觉挺好的相比win7来说更流程。但要是轮省电的话还是win7比较省。 但是我并没有一直用win8因为那时候宿舍到了晚上会停电考虑到省电方面再加上那个时候win7充满电可以连续战两节课，下午上课完全可以不用带充电器去所以一段时间后还是换回来win7。 到后面换多了系统想着换个别的操作系统来玩玩，于是就在网上搜索操作系统，下载了几个界面比较好看到系统，Ubuntu优麒麟、Deepin。然后就开始安装了，其中Deepin问题还是挺多的。 记得在安装的时候进度条走着走着会安装失败。然后就是安装好进入系统更新系统的时候会出问题以及一些软件会卡死。最主要的还是应用商店的应用太少了不能解决日常使用，到后面就没用了。 那个时候黑苹果我也装过几次但是每次都是死在半路。然后就选择放弃了，但这并没有阻止我装黑苹果的欲望。每次一看到Mac os那种扁平化的界面欲望就会越来越强。 直到2019年五月份的时候我又开始了黑苹果的探索之旅，这一次我成功把黑苹果加win10双系统安装在我的笔记本上，使用Clover来引导，然后就是安装一些驱动。 安装好了后体验了几天，同时把iCloud账号也登陆了打开了查找功能，在手机里试了下查找功能能不能用感觉挺神奇的不是正版系统也能用查找功能。然后点进去看到有一个锁定的功能于是就想试试能不能用，然后我点了一下电脑就被锁了，后面我试着解开的时候特么密码还是六位数当时设置的时候就是四位数，心想这还搞个毛线，然后就乱试直到输错了等待60分钟，然后就一直没去管了。 到现在才打算重新装一下看能不能弄好，装好开机的时候结果还是弹出那个页面，然后我把硬盘拆下来换到别的电脑里试了下正常进入桌面。当时我就纳闷了重装都不行？到后面我就放弃了，然后打算换成Deepin。那个时候看到有新闻说华为笔记本预装系统改成Deepin所以就打算再体验一次。 经过一段时间的安装和体验我发现Deepin相比之前比较成熟了，应用商店的应用也多起来了，比如WeChat、TIME、QQ这些常用的应用也有了，拿来日常使用完全没什么问题。这几天一直都在使用Deepin真心觉得不错。 最后祝Deepin系统越来越完善，用户越来越多。","link":"/passages/2020/01/08/%E6%97%B6%E9%9A%94%E5%9B%9B%E5%B9%B4%E9%87%8D%E5%9B%9EDeepin/"},{"title":"本博客Icaru主题已升级到4.0版本","text":"从之前的2.6升级到4.0不得不说变化是真的大 作者把ejs全部改写成jsx全都变了 刚接触这个改来还是有点吃力经过几天的研究终于搞好了 罗列一下新添加修改的一些功能 整个logo全部换了 新年新气象 以后就用这个logo了 底部添加备案号 修改网站运行时间、卜蒜子显示 搜索新增拼音检索 一键换肤支持夜间白天模式 重新编写了 About 页面 添加 留言 左邻右舍 new 板块 参考 iMaeGoo 来进行修的","link":"/passages/2021/02/09/%E6%9C%AC%E5%8D%9A%E5%AE%A2Icaru%E4%B8%BB%E9%A2%98%E5%B7%B2%E6%9B%B4%E6%96%B0%E5%88%B04-0%E7%89%88%E6%9C%AC/"},{"title":"没有可用的软件包 npm，但是它被其它的软件包引用了","text":"总结一下这几天在deepin系统中安装node环境出现的问题开始是直接从官网下载tar包解压到桌面然后通过命令挂载到全局；这种方法确实可行，但存在个问题如果把桌面的文件删除了就没用了。于是换了另一种方法 12sudo apt-get install -y nodejssudo apt-get install -y npm 然而这不是完美的结果。安装后存在一些问题 第一个问题就是node的版本太低了现在官网都出12.x了这里的还是4.8.212liaoweilin@admin:~$ nodejs -vv4.8.2 第二个问题就是npm安装不上 1234567891011liaoweilin@admin:~$ sudo apt install npm正在读取软件包列表... 完成正在分析软件包的依赖关系树 正在读取状态信息... 完成 没有可用的软件包 npm，但是它被其它的软件包引用了。这可能意味着这个缺失的软件包可能已被废弃，或者只能在其他发布源中找到然而下列软件包会取代它： node nodejs-binE: 软件包 npm 没有可安装候选 这个时候执行npm -v结果只会有一个12liaoweilin@admin:~$ npm -vbash: npm: 未找到命令此时心里一万个MMP 赶紧卸载了sudo apt-get remove nodejs 后来在deepin官网找到篇文章一行命令就解决了 一顿操作猛如虎sudo apt-get install -y node 1234567891011121314151617liaoweilin@admin~$ sudo apt-get install node正在读取软件包列表... 完成正在分析软件包的依赖关系树 正在读取状态信息... 完成 下列【新】软件包将被安装： node升级了 0 个软件包，新安装了 1 个软件包，要卸载 0 个软件包，有 0 个软件包未被升级。需要下载 11.5 MB 的归档。解压缩后会消耗 53.1 MB 的额外空间。获取:1 http://packages.deepin.com/deepin lion/main amd64 node amd64 10.15.3 [11.5 MB]已下载 11.5 MB，耗时 11秒 (1,021 kB/s) 正在选中未选择的软件包 node。(正在读取数据库 ... 系统当前共安装有 204284 个文件和目录。)正准备解包 .../node_10.15.3_amd64.deb ...正在解包 node (10.15.3) ...正在处理用于 man-db (2.7.6.1-2) 的触发器 ...正在设置 node (10.15.3) ... 1234liaoweilin@admin:~$ node -vv10.15.3liaoweilin@admin:~$ npm -v6.4.1 最后随便把npm镜像源换成了淘宝的1npm config set registry https://registry.npm.taobao.org 查看是否生效npm config list12345678910liaoweilin@admin:~$ npm config list; cli configsmetrics-registry = &quot;https://registry.npmjs.org/&quot;scope = &quot;&quot;user-agent = &quot;npm/6.4.1 node/v10.15.3 linux x64&quot;; node bin location = /usr/bin/node; cwd = /home/liaoweilin; HOME = /home/liaoweilin; &quot;npm config ls -l&quot; to show all defaults.","link":"/passages/2020/01/08/%E6%B2%A1%E6%9C%89%E5%8F%AF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%20npm%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E8%A2%AB%E5%85%B6%E5%AE%83%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%BC%95%E7%94%A8%E4%BA%86/"},{"title":"给hexo博客添加Live2d小人","text":"昨天看到旁边的同事在美化自己的博客，看到他在搞这个，还挺好看的，所以现在刚好有时间也折腾了一下 一、安装hexo-helper-live2d插件现在假设你已经又一个使用hexo搭建的博客，然后我们安装hexo-helper-live2d模块 hexo-helper-live2d官方中文文档 npm install –save hexo-helper-live2d 二、添加配置文件在hexo博客到_config.yml文件添加以下配置建议在根目录下的_config.yml配置，这样以后换了主题就不用重新配置了当然也可以在themes下的_config.yml配置但是要注意模型目录要填写正确 1234567891011121314151617181920live2d: enable: true # 是否启动 scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget ## 模型文件 display: position: right # 定位方向 left right top bottom width: 150 # 小人宽度 height: 300 # 小人高度 hOffset: -15 # 向👇偏移 vOffset: -15 # 像👈偏移 mobile: show: true # 手机端是否显示 react: opacity: 0.7 # 模型透明度 三、修改你喜欢的模型你可以在这里找到你喜欢的模型12345678910111213141516171819202122live2d-widget-model-chitoselive2d-widget-model-epsilon2_1live2d-widget-model-gflive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)live2d-widget-model-harutolive2d-widget-model-hibikilive2d-widget-model-hijikilive2d-widget-model-izumilive2d-widget-model-koharulive2d-widget-model-mikulive2d-widget-model-ni-jlive2d-widget-model-nicolive2d-widget-model-nietzschelive2d-widget-model-nipsilonlive2d-widget-model-nitolive2d-widget-model-shizukulive2d-widget-model-tororolive2d-widget-model-tsumikilive2d-widget-model-unitychanlive2d-widget-model-wankolive2d-widget-model-z16 然后通过npm install npm install --save live2d-widget-model-xxx来安装你喜欢的模型比方说作者喜欢的是koharu这个那就使用npm install npm install --save live2d-widget-model-koharu进行安装 安装后我们在node_modules目录下面找到live2d-widget-model-koharu这个文件夹，把这个文件夹复制下来找到我们的hexo博客的根目录(因为我们是在根目录的_config.yml里添加的配置)新建一个文件夹叫做live2d_models，把刚刚我们复制的文件粘贴过来，这样我们就完成了99%，最后我们打开添加的配置文件，找到这一行12model: use: live2d-widget ## 模型文件把use后面改成我们复制在live2d_models文件夹里面的模型目录名称，这样我们就完成了修改使用hexo d || hexo deploy来部署，然后清除一下浏览器缓存，打开后就可以发现我们添加的小人已经在屏幕右下角看着你了。","link":"/passages/2019/05/26/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Live2d%E5%B0%8F%E4%BA%BA/"},{"title":"解决小程序动态改变swiper数据位置被记录问题","text":"记录一下使用小程序swiper组件做滑动轮播时遇到的问题 1. 如图所示： 在切换tab栏时更换swiper的数据位置会被缓存，此时切换到轮播图只有一张的tab栏时，图片不见了，这时轮播图的位置是上次滑动的位置，因为只有一张图片，所以现在显示的是第二张的位置。 2. 如何解决： 首先添加一个 current 变量来记录当前滑块的位置 12345data () { return { current: 0 }} 然后设置给swiper设置 current 属性以及 @change 方法 12345678910111213141516171819&lt;swiper class=&quot;swiper-box&quot; :autoplay=&quot;false&quot; :current=&quot;current&quot; @change=&quot;swiperChange&quot; next-margin=&quot;220rpx&quot; style=&quot;height: 312rpx&quot;&gt; &lt;swiper-item v-for=&quot;(item, key) in charmList&quot; :key=&quot;key&quot;&gt; &lt;view class=&quot;view-list&quot; @click=&quot;jumpArticleDetail($event, item.id)&quot;&gt; &lt;image :src=&quot;item.image&quot;&gt;&lt;/image&gt; &lt;view class=&quot;view-content&quot;&gt; &lt;view class=&quot;title&quot;&gt;{{item.title}}&lt;/view&gt; &lt;view class=&quot;sub-title&quot;&gt;{{item.subTitle}}&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;/swiper-item&gt;&lt;/swiper&gt; 当current改变时会触发 change 事件，将current赋给储存的变量 12345methods: { swiperChange (e) { this.current = e.detail.current }} 当切换 tab 时判断 current 是否大于0，如果大于0的话就让把当前滑块设为0 123456789101112131415161718192021222324252627changeTabs (key) { this.tabs.map(item =&gt; { item.active = false }) this.tabs[key].active = true this.request(this.tabs[key].id).then(res =&gt; { if (res.code === 200) { const arr = new Array() res.data.forEach(item =&gt; { arr.push({ title: item['theme'], subTitle: item['title'], image: item['img1'] }) }) this.charmList = arr if (this.current &gt; 0) { this.current = 0 } } })} 3. 修改后的效果","link":"/passages/2020/05/28/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A8%E6%80%81%E6%94%B9%E5%8F%98swiper%E6%95%B0%E6%8D%AE%E4%BD%8D%E7%BD%AE%E8%A2%AB%E8%AE%B0%E5%BD%95%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Thinkphp","slug":"Thinkphp","link":"/tags/Thinkphp/"},{"name":"Jsonp","slug":"Jsonp","link":"/tags/Jsonp/"},{"name":"Vux","slug":"Vux","link":"/tags/Vux/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"Life","slug":"Life","link":"/tags/Life/"},{"name":"宝塔","slug":"宝塔","link":"/tags/%E5%AE%9D%E5%A1%94/"},{"name":"面试题","slug":"面试题","link":"/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"Npm","slug":"Npm","link":"/tags/Npm/"},{"name":"小程序","slug":"小程序","link":"/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}],"categories":[{"name":"解决方案","slug":"解决方案","link":"/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"name":"前端笔记","slug":"前端笔记","link":"/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"},{"name":"Hexo","slug":"解决方案/Hexo","link":"/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Hexo/"},{"name":"童话深林","slug":"童话深林","link":"/categories/%E7%AB%A5%E8%AF%9D%E6%B7%B1%E6%9E%97/"},{"name":"Hexo","slug":"前端笔记/Hexo","link":"/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/Hexo/"},{"name":"服务器迁移","slug":"解决方案/服务器迁移","link":"/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%81%E7%A7%BB/"},{"name":"面试题归纳","slug":"面试题归纳","link":"/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BD%92%E7%BA%B3/"},{"name":"Git","slug":"前端笔记/Git","link":"/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/Git/"},{"name":"Npm","slug":"解决方案/Npm","link":"/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Npm/"},{"name":"小程序","slug":"解决方案/小程序","link":"/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}]}