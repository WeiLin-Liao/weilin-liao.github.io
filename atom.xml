<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Reself&#39;s Blog</title>
  
  <subtitle>Reself&#39;s</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weilin-liao.github.io/"/>
  <updated>2021-02-10T08:43:53.424Z</updated>
  <id>https://weilin-liao.github.io/</id>
  
  <author>
    <name>Reself&#39;s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>本博客Icaru主题已升级到4.0版本</title>
    <link href="https://weilin-liao.github.io/passages/2021/02/09/%E6%9C%AC%E5%8D%9A%E5%AE%A2Icaru%E4%B8%BB%E9%A2%98%E5%B7%B2%E6%9B%B4%E6%96%B0%E5%88%B04-0%E7%89%88%E6%9C%AC/"/>
    <id>https://weilin-liao.github.io/passages/2021/02/09/%E6%9C%AC%E5%8D%9A%E5%AE%A2Icaru%E4%B8%BB%E9%A2%98%E5%B7%B2%E6%9B%B4%E6%96%B0%E5%88%B04-0%E7%89%88%E6%9C%AC/</id>
    <published>2021-02-09T05:15:32.000Z</published>
    <updated>2021-02-10T08:43:53.424Z</updated>
    
    <content type="html"><![CDATA[<p>从之前的2.6升级到4.0<br>不得不说变化是真的大 作者把ejs全部改写成jsx全都变了 刚接触这个改来还是有点吃力<br>经过几天的研究终于搞好了</p><p>罗列一下新添加修改的一些功能</p><ul><li>整个logo全部换了 新年新气象 以后就用这个logo了</li><li>底部添加备案号</li><li>修改网站运行时间、卜蒜子显示</li><li>搜索新增拼音检索</li><li>一键换肤支持夜间白天模式</li><li>重新编写了 <a href="/about/">About</a> 页面</li><li>添加 <a href="/message/">留言</a> <a href="/friends/">左邻右舍</a> new 板块</li></ul><p>参考 <a href="https://removeif.github.io/theme/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html">iMaeGoo</a> 来进行修的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从之前的2.6升级到4.0&lt;br&gt;不得不说变化是真的大 作者把ejs全部改写成jsx全都变了 刚接触这个改来还是有点吃力&lt;br&gt;经过几天的研究终于搞好了&lt;/p&gt;
&lt;p&gt;罗列一下新添加修改的一些功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整个logo全部换了 新年新气象 以后就用这个lo
      
    
    </summary>
    
    
      <category term="前端笔记" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>博客搜索功能已支持拼音检索文章</title>
    <link href="https://weilin-liao.github.io/passages/2021/02/09/%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%B7%B2%E6%94%AF%E6%8C%81%E6%8B%BC%E9%9F%B3%E6%A3%80%E7%B4%A2%E6%96%87%E7%AB%A0/"/>
    <id>https://weilin-liao.github.io/passages/2021/02/09/%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%B7%B2%E6%94%AF%E6%8C%81%E6%8B%BC%E9%9F%B3%E6%A3%80%E7%B4%A2%E6%96%87%E7%AB%A0/</id>
    <published>2021-02-09T04:45:15.000Z</published>
    <updated>2021-02-09T08:47:33.318Z</updated>
    
    <content type="html"><![CDATA[<p>最近逛博客看到了一个小功能感觉很不错 自己也折腾了一下</p><p><img src="https://www.imaegoo.com/gallery/2020/icarus-insight-pinyin.png" alt="picture"></p><p>前提</p><ul><li>Icarus 版本 3.0 以上</li><li>搜索插件使用的是 Insight</li></ul><p>参考链接 <a href="https://www.imaegoo.com/2020/icarus-insight-pinyin/">https://www.imaegoo.com/2020/icarus-insight-pinyin/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近逛博客看到了一个小功能感觉很不错 自己也折腾了一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.imaegoo.com/gallery/2020/icarus-insight-pinyin.png&quot; alt=&quot;picture&quot;&gt;&lt;/p&gt;
&lt;p&gt;前提&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="前端笔记" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题themes/ 文件夹无法提交到GitHub的解决方法</title>
    <link href="https://weilin-liao.github.io/passages/2021/02/04/Hexo%E4%B8%BB%E9%A2%98themes-%E6%96%87%E4%BB%B6%E5%A4%B9%E6%97%A0%E6%B3%95%E6%8F%90%E4%BA%A4%E5%88%B0GitHub%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://weilin-liao.github.io/passages/2021/02/04/Hexo%E4%B8%BB%E9%A2%98themes-%E6%96%87%E4%BB%B6%E5%A4%B9%E6%97%A0%E6%B3%95%E6%8F%90%E4%BA%A4%E5%88%B0GitHub%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2021-02-04T05:11:34.000Z</published>
    <updated>2021-02-09T08:48:58.270Z</updated>
    
    <content type="html"><![CDATA[<p>好久没写博客了<br>最近在家里闲着无聊想把hexo搭建的博客用git来托管实现电脑的同步管理<br>以前都是在笔记本电脑里写 现在回到家更喜欢用台式机<br>so 就有了这样的想法 🆗 现在开始折腾</p><h3 id="一、遇到的问题"><a href="#一、遇到的问题" class="headerlink" title="一、遇到的问题"></a>一、遇到的问题</h3><p>因为<code>themes/hexo-theme-icarus</code>也是从仓库里拉取下来的 他关联到了作者的git仓库<br>所以提交不上去</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\WeiLin\Desktop\weilin-liao.github (master -&gt; origin)</span><br><span class="line">λ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up to date with <span class="string">&#x27;origin/master&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">  (commit or discard the untracked or modified content <span class="keyword">in</span> submodules)</span><br><span class="line">        modified:   themes/hexo-theme-icarus (modified content, untracked content)</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> and/or <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h3><ol><li><p>从暂存区删除该文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cache themes/主题文件名</span><br></pre></td></tr></table></figure><p> 比如我的是主题是 <code>hexo-theme-icarus</code></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cache themes/hexo-theme-icarus</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>把 <code>themes/hexo-theme-icarus/.git</code>文件夹到放到位置 比方说桌面<br>记得把 <code>themes/hexo-theme-icarus/.gitignore</code>里的 <code>_config</code>去掉</li></ol><ol start="3"><li><p>git status查看当前状态</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\WeiLin\Desktop\weilin-liao.github (master -&gt; origin)</span><br><span class="line">λ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up to date with <span class="string">&#x27;origin/master&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">        deleted:    themes/hexo-theme-icarus</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        themes/</span><br></pre></td></tr></table></figure></li><li><p>直接按步骤提交就行了</p> <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git commit -m <span class="string">&quot;add themes&quot;</span></span><br><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure><p> 后面再把刚刚的.git文件夹移动回去</p><p> 🆗🆗折腾完了 干饭去了</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好久没写博客了&lt;br&gt;最近在家里闲着无聊想把hexo搭建的博客用git来托管实现电脑的同步管理&lt;br&gt;以前都是在笔记本电脑里写 现在回到家更喜欢用台式机&lt;br&gt;so 就有了这样的想法 🆗 现在开始折腾&lt;/p&gt;
&lt;h3 id=&quot;一、遇到的问题&quot;&gt;&lt;a href=&quot;#一、遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;一、遇到的问题&quot;&gt;&lt;/a&gt;一、遇到的问题&lt;/h3&gt;&lt;p&gt;因为&lt;code&gt;themes/hexo-theme-icarus&lt;/code&gt;也是从仓库里拉取下来的 他关联到了作者的git仓库&lt;br&gt;所以提交不上去&lt;/p&gt;
    
    </summary>
    
    
      <category term="解决方案" scheme="https://weilin-liao.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>解决小程序动态改变swiper数据位置被记录问题</title>
    <link href="https://weilin-liao.github.io/passages/2020/05/28/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A8%E6%80%81%E6%94%B9%E5%8F%98swiper%E6%95%B0%E6%8D%AE%E4%BD%8D%E7%BD%AE%E8%A2%AB%E8%AE%B0%E5%BD%95%E9%97%AE%E9%A2%98/"/>
    <id>https://weilin-liao.github.io/passages/2020/05/28/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A8%E6%80%81%E6%94%B9%E5%8F%98swiper%E6%95%B0%E6%8D%AE%E4%BD%8D%E7%BD%AE%E8%A2%AB%E8%AE%B0%E5%BD%95%E9%97%AE%E9%A2%98/</id>
    <published>2020-05-28T02:13:00.000Z</published>
    <updated>2021-02-09T08:51:02.666Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下使用小程序swiper组件做滑动轮播时遇到的问题</p><h3 id="1-如图所示："><a href="#1-如图所示：" class="headerlink" title="1. 如图所示："></a>1. 如图所示：</h3><blockquote><p>在切换tab栏时更换swiper的数据位置会被缓存，此时切换到轮播图只有一张的tab栏时，图片不见了，这时轮播图的位置是上次滑动的位置，因为只有一张图片，所以现在显示的是第二张的位置。</p></blockquote><p><img src="http://reself.oss-cn-beijing.aliyuncs.com/coding.me/articles/edjfhasfhbsaduigbalsogbaio.gif" alt="未修改"></p><a id="more"></a><h3 id="2-如何解决："><a href="#2-如何解决：" class="headerlink" title="2. 如何解决："></a>2. 如何解决：</h3><ul><li>首先添加一个 <code>current</code> 变量来记录当前滑块的位置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    current: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后设置给swiper设置 <code>current</code> 属性以及 <code>@change</code> 方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;swiper</span><br><span class="line">  class=&quot;swiper-box&quot;</span><br><span class="line">  :autoplay=&quot;false&quot;</span><br><span class="line">  :current=&quot;current&quot;</span><br><span class="line">  @change=&quot;swiperChange&quot;</span><br><span class="line">  next-margin=&quot;220rpx&quot;</span><br><span class="line">  style=&quot;height: 312rpx&quot;&gt;</span><br><span class="line">  &lt;swiper-item</span><br><span class="line">    v-for=&quot;(item, key) in charmList&quot;</span><br><span class="line">    :key=&quot;key&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;view-list&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;jumpArticleDetail($event, item.id)&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">&quot;item.image&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;view-content&quot;</span>&gt;</span>                        </span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;sub-title&quot;</span>&gt;</span>&#123;&#123;item.subTitle&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>当<code>current</code>改变时会触发 <code>change</code> 事件，将<code>current</code>赋给储存的变量</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    swiperChange (e) &#123;</span><br><span class="line">        <span class="built_in">this</span>.current = e.detail.current</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>当切换 <code>tab</code> 时判断  <code>current</code> 是否大于0，如果大于0的话就让把当前滑块设为0</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">changeTabs (key) &#123;</span><br><span class="line">  <span class="built_in">this</span>.tabs.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    item.active = <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.tabs[key].active = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.request(<span class="built_in">this</span>.tabs[key].id).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.code === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>()</span><br><span class="line">      </span><br><span class="line">      res.data.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        arr.push(&#123;</span><br><span class="line">          title: item[<span class="string">&#x27;theme&#x27;</span>],</span><br><span class="line">          subTitle: item[<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line">          image: item[<span class="string">&#x27;img1&#x27;</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      <span class="built_in">this</span>.charmList = arr</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.current &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="built_in">this</span>.current = <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-修改后的效果"><a href="#3-修改后的效果" class="headerlink" title="3. 修改后的效果"></a>3. 修改后的效果</h3><p><img src="http://reself.oss-cn-beijing.aliyuncs.com/coding.me/articles/dkjhjuishgfiasohgiaghsoijf.gif" alt="修改后"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一下使用小程序swiper组件做滑动轮播时遇到的问题&lt;/p&gt;
&lt;h3 id=&quot;1-如图所示：&quot;&gt;&lt;a href=&quot;#1-如图所示：&quot; class=&quot;headerlink&quot; title=&quot;1. 如图所示：&quot;&gt;&lt;/a&gt;1. 如图所示：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在切换tab栏时更换swiper的数据位置会被缓存，此时切换到轮播图只有一张的tab栏时，图片不见了，这时轮播图的位置是上次滑动的位置，因为只有一张图片，所以现在显示的是第二张的位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://reself.oss-cn-beijing.aliyuncs.com/coding.me/articles/edjfhasfhbsaduigbalsogbaio.gif&quot; alt=&quot;未修改&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="解决方案" scheme="https://weilin-liao.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="小程序" scheme="https://weilin-liao.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://weilin-liao.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>总结一下这几天遇到的面试题</title>
    <link href="https://weilin-liao.github.io/passages/2020/04/04/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B%E8%BF%99%E5%87%A0%E5%A4%A9%E9%81%87%E5%88%B0%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://weilin-liao.github.io/passages/2020/04/04/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B%E8%BF%99%E5%87%A0%E5%A4%A9%E9%81%87%E5%88%B0%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2020-04-04T03:20:01.000Z</published>
    <updated>2021-02-07T12:31:40.981Z</updated>
    
    <content type="html"><![CDATA[<ol><li>css如何切换盒模型<strong>____</strong>。 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-sizing</span>: <span class="selector-tag">border-box</span> / <span class="selector-tag">content-box</span>;</span><br></pre></td></tr></table></figure></li><li><p>0.1 + 0.2 == 0.3_______。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>HTML5中js新增的选择器<code>api</code><strong><strong><strong>__</strong></strong></strong>、<strong><strong>____</strong></strong>。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector()</span><br><span class="line"><span class="built_in">document</span>.querySelectorAll()</span><br></pre></td></tr></table></figure></li><li>HTML5新增的标签有哪些。 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">vedio</span>&gt;</span><span class="tag">&lt;/<span class="name">vedio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>写出让#move在wrapper正中央的所有方法。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;move&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="selector-tag">flex</span>布局</span><br><span class="line"><span class="selector-id">#parent</span> &#123;</span><br><span class="line">    <span class="attribute">displey</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">item-aligns</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">2. <span class="selector-tag">table-cell</span>布局</span><br><span class="line"><span class="selector-id">#parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#move</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line">3. <span class="selector-tag">position</span></span><br><span class="line"><span class="selector-id">#parent</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">i</span>.</span><br><span class="line"><span class="selector-id">#move</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ii</span>.</span><br><span class="line"><span class="selector-id">#move</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: - <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">iii</span>. </span><br><span class="line"><span class="selector-id">#move</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>写出你所知道清除浮动的方式并说明优缺点。 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 额外标签法</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">缺点：影响代码质量，不符合标准</span><br></pre></td></tr></table></figure> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2. 触发<span class="selector-tag">BFC</span>实现清除浮动</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line">优点：代码简洁</span><br><span class="line">缺点：需要显示的内容会被隐藏</span><br></pre></td></tr></table></figure> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">3. 伪类清楚浮动</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    <span class="attribute">*zoom</span>: <span class="number">1</span>; <span class="comment">/*ie6清除浮动的方式 *号只有IE6-IE7执行</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">缺点：ie6-ie7不支持伪类</span></span><br><span class="line"><span class="comment">优点：代码简洁，符合标准</span></span><br></pre></td></tr></table></figure></li><li><p>完成一下代码使程序能够正常输出。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params">_arr, _e</span>) </span>&#123;</span><br><span class="line">   ... </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (test(arr, <span class="number">1</span>) === <span class="number">0</span> &amp;&amp; test(arr, <span class="number">6</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;小没没&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params">_arr, _e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _arr.indexOf(_e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>js常见的数据类型。 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">基本数据类型：<span class="built_in">Number</span>、<span class="built_in">String</span>、<span class="built_in">Boolean</span>、<span class="literal">undefined</span>、<span class="literal">null</span></span><br><span class="line">引用数据类型：<span class="built_in">Array</span>、<span class="built_in">Object</span>、<span class="built_in">Function</span>、<span class="built_in">Date</span>、<span class="built_in">RegExp</span></span><br></pre></td></tr></table></figure></li><li>写一个闭包的例子。 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++) &#123;</span><br><span class="line">        arr[i] = (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(i)</span><br><span class="line">        &#125;(i))</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myArr = test()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j ++) &#123;</span><br><span class="line">    myArr[j]()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>使用常见的方法给btn添加一个thisClick()事件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;btn&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    thisClick()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> btn.addEventlistener(<span class="string">&#x27;click&#x27;</span>, thisClick, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> $(<span class="string">&#x27;#btn&#x27;</span>).click(thisClick())</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> $(<span class="string">&#x27;#btn&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, thisClick)</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> $(<span class="string">&#x27;#btn&#x27;</span>).bind(<span class="string">&#x27;click&#x27;</span>, thisClick)</span><br></pre></td></tr></table></figure></li><li>vue生命周期。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建前状态</span></span><br><span class="line">beforeCreate () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建完毕状态</span></span><br><span class="line">created () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 挂载前状态</span></span><br><span class="line">beforeMount () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 挂载结束状态</span></span><br><span class="line">mounted () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 更新前状态</span></span><br><span class="line">beforeUpdate () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 更新完成状态</span></span><br><span class="line">updated () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 销毁前状态</span></span><br><span class="line">beforeDestroy () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 销毁完成状态</span></span><br><span class="line">destroy () &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;css如何切换盒模型&lt;strong&gt;____&lt;/strong&gt;。 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;box-sizing&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;border-box&lt;/span&gt; / &lt;span class=&quot;selector-tag&quot;&gt;content-box&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.1 + 0.2 == 0.3_______。&lt;/p&gt;
 &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="面试题归纳" scheme="https://weilin-liao.github.io/categories/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BD%92%E7%BA%B3/"/>
    
    
      <category term="面试题" scheme="https://weilin-liao.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>vuex学习笔记</title>
    <link href="https://weilin-liao.github.io/passages/2020/04/02/vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://weilin-liao.github.io/passages/2020/04/02/vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-02T03:40:54.000Z</published>
    <updated>2021-02-09T04:12:17.693Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装vuex"><a href="#1-安装vuex" class="headerlink" title="1.  安装vuex"></a>1.  安装vuex</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex --save</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-导入vuex创建store对象"><a href="#2-导入vuex创建store对象" class="headerlink" title="2. 导入vuex创建store对象"></a>2. 导入vuex创建store对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="3-将Store挂载到vue实例"><a href="#3-将Store挂载到vue实例" class="headerlink" title="3. 将Store挂载到vue实例"></a>3. 将Store挂载到vue实例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  store,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h2 id="4-核心概念"><a href="#4-核心概念" class="headerlink" title="4. 核心概念"></a>4. 核心概念</h2><blockquote><h2 id="1-State"><a href="#1-State" class="headerlink" title="1. State"></a>1. State</h2></blockquote><ul><li><p>访问State数据的<code>第一种方式</code></p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;$store.state.count&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$store.state.count += <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>访问State数据的<code>第二种方式</code></p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">&#x27;veux&#x27;</span></span><br><span class="line"></span><br><span class="line">computed: &#123;</span><br><span class="line">    ...mapState([<span class="string">&#x27;count&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><h2 id="2-Mutation（只支持同步操作）"><a href="#2-Mutation（只支持同步操作）" class="headerlink" title="2. Mutation（只支持同步操作）"></a>2. Mutation（只支持同步操作）</h2></blockquote></li><li><p>第一种方式</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">state: &#123;</span><br><span class="line">    count: <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line">mutations: &#123;</span><br><span class="line">    add (state, step) &#123;</span><br><span class="line">        state.count += step</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/.vue</span></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">    add () &#123;</span><br><span class="line">        <span class="comment">// 触发mutations</span></span><br><span class="line">        <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;add&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    del () &#123;</span><br><span class="line">        <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;del&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>第二种方式</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/.vue</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入mapMutations函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; mapMutations &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">// 将mapMutations映射到当前组件</span></span><br><span class="line">    ...mapMutations([<span class="string">&#x27;add&#x27;</span>, <span class="string">&#x27;del&#x27;</span>]),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 直接调用即可</span></span><br><span class="line">    tapEvent () &#123;</span><br><span class="line">        <span class="built_in">this</span>.add()</span><br><span class="line">        <span class="built_in">this</span>.del()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><h2 id="3-Action（支持异步操作）"><a href="#3-Action（支持异步操作）" class="headerlink" title="3. Action（支持异步操作）"></a>3. Action（支持异步操作）</h2></blockquote><ul><li><p>第一种方法</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    mutations: &#123;</span><br><span class="line">        add (state, step) &#123;</span><br><span class="line">            state.count += step</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        addSync (context) &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 通过触发Mutations的方式间接变更数据</span></span><br><span class="line">                context.commit(<span class="string">&#x27;add&#x27;</span>)</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/.vue</span></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">    handle () &#123;</span><br><span class="line">        <span class="comment">// 触发actions</span></span><br><span class="line">        <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;addSync&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>第二种方法</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入mapActions函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将函数映射为当前组件的methods中</span></span><br><span class="line">methods: &#123;</span><br><span class="line">    ...mapActions([<span class="string">&#x27;addSync&#x27;</span>]),</span><br><span class="line"></span><br><span class="line">    handle () &#123;</span><br><span class="line">        <span class="built_in">this</span>.addSync(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><h2 id="4-Getter"><a href="#4-Getter" class="headerlink" title="4. Getter"></a>4. Getter</h2></blockquote><ul><li><p>第一种方法</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    getters: &#123;</span><br><span class="line">        showCount (state) &#123;</span><br><span class="line">            <span class="keyword">return</span> state.count</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 访问</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.$store.getters.showCount()</span><br></pre></td></tr></table></figure></li><li><p>第二种方法</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line">computed: &#123;</span><br><span class="line">    ...mapGetters([<span class="string">&#x27;showCount&#x27;</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.$store.getters.showCount()</span><br></pre></td></tr></table></figure>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;showCount&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-安装vuex&quot;&gt;&lt;a href=&quot;#1-安装vuex&quot; class=&quot;headerlink&quot; title=&quot;1.  安装vuex&quot;&gt;&lt;/a&gt;1.  安装vuex&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install vuex --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Vux" scheme="https://weilin-liao.github.io/tags/Vux/"/>
    
  </entry>
  
  <entry>
    <title>单招数学-集合与集合的概念</title>
    <link href="https://weilin-liao.github.io/passages/2020/02/05/%E5%8D%95%E6%8B%9B%E6%95%B0%E5%AD%A6-%E9%9B%86%E5%90%88%E4%B8%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%A6%82%E5%BF%B5/"/>
    <id>https://weilin-liao.github.io/passages/2020/02/05/%E5%8D%95%E6%8B%9B%E6%95%B0%E5%AD%A6-%E9%9B%86%E5%90%88%E4%B8%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%A6%82%E5%BF%B5/</id>
    <published>2020-02-05T14:20:01.000Z</published>
    <updated>2021-02-07T12:02:44.383Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-1-1、集合基础知识"><a href="#1-1-1、集合基础知识" class="headerlink" title="1.1.1、集合基础知识"></a>1.1.1、集合基础知识</h3><ol><li><p>定义：一般我们把研究对象统称为<u> <strong>元素</strong> </u>，一些元素组成的总体叫<u> <strong>集合</strong> </u>，也简称<u> <strong>集</strong> </u>。</p></li><li><p>表示方法：<br>集合通常用大括号{ }或大写的拉丁字母<u> <strong>A,B,C…</strong> </u>表示，元素用小写的拉丁字母<u> <strong>a,b,c…</strong> </u>表示。</p></li><li><p>关于集合的元素的特征：</p></li></ol><a id="more"></a><p>（1）<u> <strong>确定性</strong> </u>：给定一个集合，那么任何一个元素在或不在这个集合中就确定了；    </p><p>（2）<u> <strong>互异性</strong> </u>：一个集合中的元素是互不相同的，即集合中的元素是不重复出现的；</p><p>（3）<u> <strong>无序性</strong> </u>：即集合中的元素无顺序,可以任意排列、调换。</p><ol start="4"><li>元素与集合的关系：(元素与集合的关系有“属于”及“不属于”两种)</li></ol><p>（1）若a是集合A中的元素，则称a属于集合A，记作：<u> <strong>a∈A </strong></u>；</p><p>（2）若a不是集合A的元素，则称a不属于集合A，记作：<u> <strong>a∉A</strong> </u>。</p><ol start="5"><li>集合的表示方法：</li></ol><p>（1）<u> <strong>列举法</strong> </u>：把集合中的元素一一列举出来, 并用花括号括起来表示集合的方法叫列举法；</p><p>（2）<u> <strong>描述法</strong> </u>：用集合所含元素的共同特征表示集合的方法，称为描述法；</p><p>（3）<u> <strong>图像法</strong> </u>：画一条封闭的曲线,用它的内部来表示一个集合。</p><p><strong>常见的集合</strong><br>集合 | 字母符号 | 表示 |<br>:-:|:-:|:-:|<br>自然数集 | N | {0,1,2,3,…}<br>正整数集 | N*或N+ | {1,2,3,…}<br>整数集 | Z | {…,-1,0,1,…}<br>有理数集 | Q | ~<br>实数集 | R | ~<br>负数集 | C | ~<br>空集 | ∅ | ~</p><hr><h3 id="1-1-2、集合的基本关系"><a href="#1-1-2、集合的基本关系" class="headerlink" title="1.1.2、集合的基本关系"></a>1.1.2、集合的基本关系</h3><ol><li><p><u> <strong>子集</strong> </u>：对于两个集合A、B，如果集合A中任意一个元素都是集合B 中的元素，则称 集合 A是集合B 的子集。记作 <u> <strong>A⊆B</strong> </u>。</p></li><li><p><u> <strong>真子集</strong> </u>： 如果集合 A⊆B ，但存在元素 x∈B ，且 x∉A，则称集合A是集合B的真子集。记作：<u> <strong>A⊊B</strong> </u>。</p></li><li><p><u> <strong>空集</strong> </u>：把不含任何元素的集合叫做空集.记作：<u> <strong>∅</strong> </u>。并规定：空集合是任何集合的子集。</p></li></ol><ul><li style="list-style: none"><input type="checkbox" checked></input> 计算方式：</li><li>子集：zn个</li><li>真子集：2n-1个</li><li><p>非空真子集：2n-2个</p></li><li><p>[ ] 例题1：A = {1,2,3}</p></li><li>子集个数：2x2x2=8</li><li>真子集个数：2x2x2-1=7</li><li><p>非空真子集：2x2x2-2=6</p></li><li><p>[ ] 例题二：A={1,2,3,4}</p></li><li>子集个数：2x2x2x2=16</li><li>真子集个数：2x2x2x2-1=15</li><li>非空真子集个数：2x2x2x2-2=14</li></ul><hr><h3 id="1-1-3、集合间的基本运算"><a href="#1-1-3、集合间的基本运算" class="headerlink" title="1.1.3、集合间的基本运算"></a>1.1.3、集合间的基本运算</h3><ol><li><p><u> <strong>交集</strong> </u>：由属于集合A 且属于集合B的所有元素组成的集合，称为 A 与B 的交集.记作：<u> <strong>A∩B</strong> </u></p></li><li><p><u> <strong>并集</strong> </u>：由所有属于集合A或集合 B的元素组成的集合，称为集合A与B的并集.记作：<u> <strong>A∪B</strong> </u></p></li></ol><ul><li><p>[ ] 例题：设集合A=｛1,3,5,6｝，集合B=｛2,3,4,5｝。求A ∪B 和A ∩ B？</p></li><li><p>求交集：取两个集合相同的元素重新组成一个新集合。</p></li></ul><ol><li>A ∩ B = {3,5}</li></ol><ul><li>求并集：取两个集合所有的元素重新组成一个新集合。</li></ul><ol start="2"><li>A u B = {1,2,3,4,5,6}</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-1-1、集合基础知识&quot;&gt;&lt;a href=&quot;#1-1-1、集合基础知识&quot; class=&quot;headerlink&quot; title=&quot;1.1.1、集合基础知识&quot;&gt;&lt;/a&gt;1.1.1、集合基础知识&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;定义：一般我们把研究对象统称为&lt;u&gt; &lt;strong&gt;元素&lt;/strong&gt; &lt;/u&gt;，一些元素组成的总体叫&lt;u&gt; &lt;strong&gt;集合&lt;/strong&gt; &lt;/u&gt;，也简称&lt;u&gt; &lt;strong&gt;集&lt;/strong&gt; &lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表示方法：&lt;br&gt;集合通常用大括号{ }或大写的拉丁字母&lt;u&gt; &lt;strong&gt;A,B,C…&lt;/strong&gt; &lt;/u&gt;表示，元素用小写的拉丁字母&lt;u&gt; &lt;strong&gt;a,b,c…&lt;/strong&gt; &lt;/u&gt;表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于集合的元素的特征：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="童话深林" scheme="https://weilin-liao.github.io/categories/%E7%AB%A5%E8%AF%9D%E6%B7%B1%E6%9E%97/"/>
    
    
      <category term="Life" scheme="https://weilin-liao.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>时隔四年重回Deepin</title>
    <link href="https://weilin-liao.github.io/passages/2020/01/08/%E6%97%B6%E9%9A%94%E5%9B%9B%E5%B9%B4%E9%87%8D%E5%9B%9EDeepin/"/>
    <id>https://weilin-liao.github.io/passages/2020/01/08/%E6%97%B6%E9%9A%94%E5%9B%9B%E5%B9%B4%E9%87%8D%E5%9B%9EDeepin/</id>
    <published>2020-01-08T11:48:02.000Z</published>
    <updated>2021-02-09T05:11:33.775Z</updated>
    
    <content type="html"><![CDATA[<p>第一次接触深度系统是在学校的时候，那个时<code>win7</code>用过一段时间后会很卡，所以在那时候就想经常换系统，想找个好点的系统来玩玩。<br>每次装完新系统都会把桌面弄得整整齐齐的，一些基本的驱动、软件都会全部安装好，然后就是把一些没用的启动项都禁止基本上就很完美了。</p><a id="more"></a><p>随着后面的软件越装越多，慢慢的系统也就越来越卡了，特别是打开<code>explorer</code>的时候圈圈一直转。然后就这样重复重装系统。<br>期间一直装的都是<code>win7</code>，也用一段时间<code>win8</code>感觉挺好的相比<code>win7</code>来说更流程。但要是轮省电的话还是<code>win7</code>比较省。</p><p>但是我并没有一直用<code>win8</code>因为那时候宿舍到了晚上会停电考虑到省电方面再加上那个时候<code>win7</code>充满电可以连续战两节课，下午上课完全可以不用带充电器去所以一段时间后还是换回来<code>win7</code>。</p><p>到后面换多了系统想着换个别的操作系统来玩玩，于是就在网上搜索操作系统，下载了几个界面比较好看到系统，<code>Ubuntu</code>优麒麟、<code>Deepin</code>。然后就开始安装了，其中<code>Deepin</code>问题还是挺多的。</p><p>记得在安装的时候进度条走着走着会安装失败。然后就是安装好进入系统更新系统的时候会出问题以及一些软件会卡死。最主要的还是应用商店的应用太少了不能解决日常使用，到后面就没用了。</p><p>那个时候<code>黑苹果</code>我也装过几次但是每次都是死在半路。然后就选择放弃了，但这并没有阻止我装<code>黑苹果</code>的欲望。每次一看到<code>Mac os</code>那种扁平化的界面欲望就会越来越强。</p><p>直到<code>2019</code>年五月份的时候我又开始了<code>黑苹果</code>的探索之旅，这一次我成功把<code>黑苹果</code>加<code>win10</code>双系统安装在我的笔记本上，使用<code>Clover</code>来引导，然后就是安装一些驱动。</p><p>安装好了后体验了几天，同时把iCloud账号也登陆了打开了查找功能，在手机里试了下查找功能能不能用感觉挺神奇的不是正版系统也能用查找功能。然后点进去看到有一个锁定的功能于是就想试试能不能用，然后我点了一下电脑就被锁了，后面我试着解开的时候特么密码还是六位数当时设置的时候就是四位数，心想这还搞个毛线，然后就乱试直到输错了等待60分钟，然后就一直没去管了。</p><p>到现在才打算重新装一下看能不能弄好，装好开机的时候结果还是弹出那个页面，然后我把硬盘拆下来换到别的电脑里试了下正常进入桌面。<br>当时我就纳闷了重装都不行？到后面我就放弃了，然后打算换成<code>Deepin</code>。那个时候看到有新闻说<code>华为</code>笔记本预装系统改成<code>Deepin</code>所以就打算再体验一次。</p><p>经过一段时间的安装和体验我发现<code>Deepin</code>相比之前比较成熟了，应用商店的应用也多起来了，比如<code>WeChat</code>、<code>TIME</code>、<code>QQ</code>这些常用的应用也有了，拿来日常使用完全没什么问题。这几天一直都在使用<code>Deepin</code>真心觉得不错。</p><p>最后祝<code>Deepin</code>系统越来越完善，用户越来越多。</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20200108192337.png" alt="附上一张桌面图"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次接触深度系统是在学校的时候，那个时&lt;code&gt;win7&lt;/code&gt;用过一段时间后会很卡，所以在那时候就想经常换系统，想找个好点的系统来玩玩。&lt;br&gt;每次装完新系统都会把桌面弄得整整齐齐的，一些基本的驱动、软件都会全部安装好，然后就是把一些没用的启动项都禁止基本上就很完美了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="童话深林" scheme="https://weilin-liao.github.io/categories/%E7%AB%A5%E8%AF%9D%E6%B7%B1%E6%9E%97/"/>
    
    
      <category term="Life" scheme="https://weilin-liao.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>没有可用的软件包 npm，但是它被其它的软件包引用了</title>
    <link href="https://weilin-liao.github.io/passages/2020/01/08/%E6%B2%A1%E6%9C%89%E5%8F%AF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%20npm%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E8%A2%AB%E5%85%B6%E5%AE%83%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%BC%95%E7%94%A8%E4%BA%86/"/>
    <id>https://weilin-liao.github.io/passages/2020/01/08/%E6%B2%A1%E6%9C%89%E5%8F%AF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%20npm%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E8%A2%AB%E5%85%B6%E5%AE%83%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%BC%95%E7%94%A8%E4%BA%86/</id>
    <published>2020-01-08T09:49:41.000Z</published>
    <updated>2021-02-09T04:50:43.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="总结一下这几天在deepin系统中安装node环境出现的问题"><a href="#总结一下这几天在deepin系统中安装node环境出现的问题" class="headerlink" title="总结一下这几天在deepin系统中安装node环境出现的问题"></a>总结一下这几天在deepin系统中安装node环境出现的问题</h3><p>开始是直接从官网下载tar包解压到桌面然后通过命令挂载到全局；这种方法确实可行，但存在个问题如果把桌面的文件删除了就没用了。<br>于是换了另一种方法</p><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install -y nodejs</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install -y npm</span><br></pre></td></tr></table></figure><p>然而这不是完美的结果。安装后存在一些问题</p><ol><li>第一个问题就是node的版本太低了现在官网都出12.x了这里的还是4.8.2<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">liaoweilin<span class="variable">@admin</span><span class="symbol">:~</span><span class="variable">$ </span>nodejs -v</span><br><span class="line">v4.<span class="number">8.2</span></span><br></pre></td></tr></table></figure></li><li>第二个问题就是npm安装不上</li></ol><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">liaoweilin@admin:~$ sudo apt install <span class="built_in">npm</span></span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">没有可用的软件包 <span class="built_in">npm</span>，但是它被其它的软件包引用了。</span><br><span class="line">这可能意味着这个缺失的软件包可能已被废弃，</span><br><span class="line">或者只能在其他发布源中找到</span><br><span class="line">然而下列软件包会取代它：</span><br><span class="line">  node nodejs-bin</span><br><span class="line"></span><br><span class="line">E: 软件包 <span class="built_in">npm</span> 没有可安装候选</span><br></pre></td></tr></table></figure><p>这个时候执行<code>npm -v</code>结果只会有一个<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">liaoweilin<span class="variable">@admin</span><span class="symbol">:~</span><span class="variable">$ </span>npm -v</span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">npm:</span> 未找到命令</span><br></pre></td></tr></table></figure><br>此时心里一万个MMP 赶紧卸载了<br><code>sudo apt-get  remove nodejs</code></p><h3 id="后来在deepin官网找到篇文章"><a href="#后来在deepin官网找到篇文章" class="headerlink" title="后来在deepin官网找到篇文章"></a>后来在<a href="https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=178726&amp;extra=">deepin官网找到篇文章</a></h3><p>一行命令就解决了</p><p>一顿操作猛如虎<br><code>sudo apt-get install -y node</code></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">liaoweilin@admin~$ sudo apt-get install <span class="keyword">node</span><span class="title"></span></span><br><span class="line"><span class="title">正在读取软件包列表... 完成</span></span><br><span class="line"><span class="title">正在分析软件包的依赖关系树       </span></span><br><span class="line"><span class="title">正在读取状态信息... 完成       </span></span><br><span class="line"><span class="title">下列【新】软件包将被安装：</span></span><br><span class="line"><span class="title">  node</span></span><br><span class="line">升级了 <span class="number">0</span> 个软件包，新安装了 <span class="number">1</span> 个软件包，要卸载 <span class="number">0</span> 个软件包，有 <span class="number">0</span> 个软件包未被升级。</span><br><span class="line">需要下载 <span class="number">11.5</span> MB 的归档。</span><br><span class="line">解压缩后会消耗 <span class="number">53.1</span> MB 的额外空间。</span><br><span class="line">获取:<span class="number">1</span> http://packages.deepin.com/deepin lion/main amd64 <span class="keyword">node</span> <span class="title">amd64</span> <span class="number">10.15</span>.<span class="number">3</span> [<span class="number">11.5</span> MB]</span><br><span class="line">已下载 <span class="number">11.5</span> MB，耗时 <span class="number">11</span>秒 (<span class="number">1</span>,<span class="number">021</span> kB/s)                                                        </span><br><span class="line">正在选中未选择的软件包 <span class="keyword">node</span><span class="title">。</span></span><br><span class="line"><span class="title">(正在读取数据库 ... 系统当前共安装有 204284</span> 个文件和目录。)</span><br><span class="line">正准备解包 .../node_10.<span class="number">15.3</span>_amd64.deb  ...</span><br><span class="line">正在解包 <span class="keyword">node</span> <span class="title">(10</span>.<span class="number">15.3</span>) ...</span><br><span class="line">正在处理用于 man-db (<span class="number">2.7</span>.<span class="number">6.1</span>-<span class="number">2</span>) 的触发器 ...</span><br><span class="line">正在设置 <span class="keyword">node</span> <span class="title">(10</span>.<span class="number">15.3</span>) ...</span><br></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">liaoweilin<span class="variable">@admin</span><span class="symbol">:~</span><span class="variable">$ </span>node -v</span><br><span class="line">v10.<span class="number">15.3</span></span><br><span class="line">liaoweilin<span class="variable">@admin</span><span class="symbol">:~</span><span class="variable">$ </span>npm -v</span><br><span class="line"><span class="number">6.4</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="最后随便把npm镜像源换成了淘宝的"><a href="#最后随便把npm镜像源换成了淘宝的" class="headerlink" title="最后随便把npm镜像源换成了淘宝的"></a>最后随便把npm镜像源换成了淘宝的</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">config</span> <span class="built_in">set</span> registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>查看是否生效<code>npm config list</code><br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">liaoweilin@admin:~$ npm config list</span><br><span class="line">; cli configs</span><br><span class="line">metrics-registry = <span class="string">&quot;https://registry.npmjs.org/&quot;</span></span><br><span class="line">scope = <span class="string">&quot;&quot;</span></span><br><span class="line">user-agent = <span class="string">&quot;npm/6.4.1 node/v10.15.3 linux x64&quot;</span></span><br><span class="line"></span><br><span class="line">; <span class="keyword">node</span> <span class="title">bin</span> <span class="keyword">location</span> <span class="title">= /usr</span>/bin/<span class="keyword">node</span><span class="title"></span></span><br><span class="line"><span class="title">; cwd</span> = /home/liaoweilin</span><br><span class="line">; HOME = /home/liaoweilin</span><br><span class="line">; <span class="string">&quot;npm config ls -l&quot;</span> to show all defaults.</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;总结一下这几天在deepin系统中安装node环境出现的问题&quot;&gt;&lt;a href=&quot;#总结一下这几天在deepin系统中安装node环境出现的问题&quot; class=&quot;headerlink&quot; title=&quot;总结一下这几天在deepin系统中安装node环境出现的问题&quot;&gt;&lt;/a&gt;总结一下这几天在deepin系统中安装node环境出现的问题&lt;/h3&gt;&lt;p&gt;开始是直接从官网下载tar包解压到桌面然后通过命令挂载到全局；这种方法确实可行，但存在个问题如果把桌面的文件删除了就没用了。&lt;br&gt;于是换了另一种方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="解决方案" scheme="https://weilin-liao.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="Npm" scheme="https://weilin-liao.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Npm/"/>
    
    
      <category term="Npm" scheme="https://weilin-liao.github.io/tags/Npm/"/>
    
  </entry>
  
  <entry>
    <title>js+thinkphp 实现jsonp跨越</title>
    <link href="https://weilin-liao.github.io/passages/2019/06/14/js+thinkphp%20%E5%AE%9E%E7%8E%B0jsonp/"/>
    <id>https://weilin-liao.github.io/passages/2019/06/14/js+thinkphp%20%E5%AE%9E%E7%8E%B0jsonp/</id>
    <published>2019-06-14T09:49:41.000Z</published>
    <updated>2021-02-09T08:52:15.996Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、使用js创建script动态插入页面"><a href="#1、使用js创建script动态插入页面" class="headerlink" title="1、使用js创建script动态插入页面"></a>1、使用js创建script动态插入页面</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用来创建script标签</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 创建一个script标签</span></span><br><span class="line">    <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    <span class="comment">// 指定script的类型</span></span><br><span class="line">    script.type = <span class="string">&#x27;text/javascript&#x27;</span>;</span><br><span class="line">    <span class="comment">// 定义script请求的链接 后面加上callBack 请求成功后的回调</span></span><br><span class="line">    script.src = <span class="string">&#x27;http://test.com/public/index.php/index/index/index?resume=all&amp;callBack=jsonp&#x27;</span>;</span><br><span class="line">    <span class="comment">// 把创建的标签插入到body的前面</span></span><br><span class="line">    <span class="built_in">document</span>.body.firstElementChild.append(script);</span><br><span class="line">&#125;())</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2、创建该方法用来接收后台传过来的数据"><a href="#2、创建该方法用来接收后台传过来的数据" class="headerlink" title="2、创建该方法用来接收后台传过来的数据"></a>2、创建该方法用来接收后台传过来的数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// （response）参数 用来接收后台传过来的数据</span></span><br><span class="line"><span class="comment">// jsonp 为函数名 可以自定义 但是必须和callBack后面的值一样</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsonp</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、服务器端代码"><a href="#3、服务器端代码" class="headerlink" title="3、服务器端代码"></a>3、服务器端代码</h3><blockquote><p>后端接收前端传过来的callBack方法名 然后返回jsonp(data) 执行并把后台查找到的数据放在方法里面<br>这就是jsonp实现跨越的精髓</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$request</span> = Request::instance();</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$request</span> -&gt; GET()) &#123;</span><br><span class="line">        <span class="comment">// 接收自定义的参数</span></span><br><span class="line">        <span class="variable">$resume</span> = input(<span class="string">&#x27;resume&#x27;</span>); </span><br><span class="line">        <span class="comment">// 接收前端定义的回调函数</span></span><br><span class="line">        <span class="variable">$callBack</span> = input(<span class="string">&#x27;callBack&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$resume</span> == <span class="string">&#x27;all&#x27;</span>) &#123; <span class="comment">// 这里表示需要全部简历信息</span></span><br><span class="line">            <span class="variable">$data</span> = json_encode(Db::name(<span class="string">&#x27;resume&#x27;</span>)-&gt;select());</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$callBack</span>.<span class="string">&#x27;(&#x27;</span>.<span class="variable">$data</span>.<span class="string">&#x27;)&#x27;</span>; <span class="comment">// 返回用户定义的方法名 加上括号 里面把数据放进去 前端接收到会执行</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、最后前端就可以得到想要的数据了"><a href="#4、最后前端就可以得到想要的数据了" class="headerlink" title="4、最后前端就可以得到想要的数据了"></a>4、最后前端就可以得到想要的数据了</h3><hr><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/2019-06-13%2002-51.png" alt="images"></p><hr><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/2019-06-13%2002-55-27.png" alt="images"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、使用js创建script动态插入页面&quot;&gt;&lt;a href=&quot;#1、使用js创建script动态插入页面&quot; class=&quot;headerlink&quot; title=&quot;1、使用js创建script动态插入页面&quot;&gt;&lt;/a&gt;1、使用js创建script动态插入页面&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 用来创建script标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建一个script标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; script = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&amp;#x27;script&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 指定script的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    script.type = &lt;span class=&quot;string&quot;&gt;&amp;#x27;text/javascript&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 定义script请求的链接 后面加上callBack 请求成功后的回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    script.src = &lt;span class=&quot;string&quot;&gt;&amp;#x27;http://test.com/public/index.php/index/index/index?resume=all&amp;amp;callBack=jsonp&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 把创建的标签插入到body的前面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.firstElementChild.append(script);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Thinkphp" scheme="https://weilin-liao.github.io/tags/Thinkphp/"/>
    
      <category term="Jsonp" scheme="https://weilin-liao.github.io/tags/Jsonp/"/>
    
  </entry>
  
  <entry>
    <title>给hexo博客添加Live2d小人</title>
    <link href="https://weilin-liao.github.io/passages/2019/05/26/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Live2d%E5%B0%8F%E4%BA%BA/"/>
    <id>https://weilin-liao.github.io/passages/2019/05/26/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Live2d%E5%B0%8F%E4%BA%BA/</id>
    <published>2019-05-26T03:40:54.000Z</published>
    <updated>2021-02-09T05:10:26.567Z</updated>
    
    <content type="html"><![CDATA[<p>昨天看到旁边的同事在美化自己的博客，看到他在搞这个，还挺好看的，所以现在刚好有时间也折腾了一下</p><a id="more"></a><h3 id="一、安装hexo-helper-live2d插件"><a href="#一、安装hexo-helper-live2d插件" class="headerlink" title="一、安装hexo-helper-live2d插件"></a>一、安装hexo-helper-live2d插件</h3><p>现在假设你已经又一个使用<code>hexo</code>搭建的博客，然后我们安装<a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a>模块</p><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">hexo-helper-live2d官方中文文档</a></p><blockquote><p>npm install –save hexo-helper-live2d</p></blockquote><h3 id="二、添加配置文件"><a href="#二、添加配置文件" class="headerlink" title="二、添加配置文件"></a>二、添加配置文件</h3><p>在<code>hexo</code>博客到<code>_config.yml</code>文件添加以下配置<br>建议在根目录下的<code>_config.yml</code>配置，这样以后换了主题就不用重新配置了<br>当然也可以在<code>themes</code>下的<code>_config.yml</code>配置但是要注意模型目录要填写正确</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否启动</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span>  <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span>  <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span>  <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span>  <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span>  <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget</span>  <span class="comment">## 模型文件</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># 定位方向 left right top bottom</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span>  <span class="comment"># 小人宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#  小人高度</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">-15</span>  <span class="comment"># 向👇偏移</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-15</span>  <span class="comment"># 像👈偏移</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span>  <span class="comment"># 手机端是否显示</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span>  <span class="comment"># 模型透明度</span></span><br></pre></td></tr></table></figure><h3 id="三、修改你喜欢的模型"><a href="#三、修改你喜欢的模型" class="headerlink" title="三、修改你喜欢的模型"></a>三、修改你喜欢的模型</h3><p>你可以在<a href="https://huaji8.top/post/live2d-plugin-2.0/">这里</a>找到你喜欢的模型<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">live2d-widget-model-chitose</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-epsilon2_1</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-gf</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-haru</span>/01 (<span class="selector-tag">use</span> <span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">--save</span> <span class="selector-tag">live2d-widget-model-haru</span>)</span><br><span class="line"><span class="selector-tag">live2d-widget-model-haru</span>/02 (<span class="selector-tag">use</span> <span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">--save</span> <span class="selector-tag">live2d-widget-model-haru</span>)</span><br><span class="line"><span class="selector-tag">live2d-widget-model-haruto</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-hibiki</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-hijiki</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-izumi</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-koharu</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-miku</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-ni-j</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-nico</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-nietzsche</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-nipsilon</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-nito</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-shizuku</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-tororo</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-tsumiki</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-unitychan</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-wanko</span></span><br><span class="line"><span class="selector-tag">live2d-widget-model-z16</span></span><br></pre></td></tr></table></figure></p><p>然后通过<code>npm install npm install --save live2d-widget-model-xxx</code>来安装你喜欢的模型<br>比方说作者喜欢的是<code>koharu</code>这个那就使用<code>npm install npm install --save live2d-widget-model-koharu</code>进行安装</p><p>安装后我们在<code>node_modules</code>目录下面找到<code>live2d-widget-model-koharu</code>这个文件夹，把这个文件夹复制下来<br>找到我们的<code>hexo</code>博客的根目录(因为我们是在根目录的<code>_config.yml</code>里添加的配置)新建一个文件夹叫做<code>live2d_models</code>，把刚刚我们复制的文件粘贴过来，这样我们就完成了<code>99%</code>，最后我们打开添加的配置文件，找到这一行<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget</span>  <span class="comment">## 模型文件</span></span><br></pre></td></tr></table></figure><br>把<code>use</code>后面改成我们复制在<code>live2d_models</code>文件夹里面的模型目录名称，这样我们就完成了修改使用<code>hexo d || hexo deploy</code>来部署，然后清除一下浏览器缓存，打开后就可以发现我们添加的小人已经在屏幕右下角看着你了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天看到旁边的同事在美化自己的博客，看到他在搞这个，还挺好看的，所以现在刚好有时间也折腾了一下&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://weilin-liao.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用git推送项目至远程仓库GitHub教程</title>
    <link href="https://weilin-liao.github.io/passages/2019/03/16/%E4%BD%BF%E7%94%A8git%E6%8E%A8%E9%80%81%E9%A1%B9%E7%9B%AE%E8%87%B3%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93GitHub/"/>
    <id>https://weilin-liao.github.io/passages/2019/03/16/%E4%BD%BF%E7%94%A8git%E6%8E%A8%E9%80%81%E9%A1%B9%E7%9B%AE%E8%87%B3%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93GitHub/</id>
    <published>2019-03-15T16:08:00.000Z</published>
    <updated>2021-02-09T08:53:08.195Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、下载安装并配置git"><a href="#一、下载安装并配置git" class="headerlink" title="一、下载安装并配置git"></a>一、下载安装并配置git</h3><blockquote><p>首先我们得先安装git<br>点击进入<a href="https://git-scm.com/download/win" title="Downloading Git">Git官网</a>进行下载<br>根据对应的系统选择对应的版本，在这里我选择<code>64-bit Git for Windows Setup.</code> 这个版本</p></blockquote><a id="more"></a><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316005801.png" alt="Downloading Git"></p><blockquote><p>下载挺慢的 耐心等待一下，下载完成后直接双击 下一步下一步进行安装 默认选择就行<br>安装完成后 打开<code>cmd</code>输入 <code>git --version</code><br>此时显示出<code>git</code>的版本号就证明安装成功</p></blockquote><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316010924.png" alt="20190316010924"></p><p>安装成功后我们来设置一下配置项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;Your email&quot;  &#x2F;&#x2F; 输入你的名称</span><br><span class="line">git config --global user.name &quot;Your name&quot; &#x2F;&#x2F; 输入你的邮箱</span><br></pre></td></tr></table></figure><p>输入后直接按回车</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316103853.png" alt="20190316103853"><br><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316103945.png" alt="20190316103945"></p><p>使用<code>git config --list</code>来查看我们的配置</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316105645.png" alt="20190316105645"></p><p>可以看到刚刚我们设置的已经生效了</p><h3 id="二、注册guithub账号并新建一个项目"><a href="#二、注册guithub账号并新建一个项目" class="headerlink" title="二、注册guithub账号并新建一个项目"></a>二、注册guithub账号并新建一个项目</h3><blockquote><p>直接进入<code>GitHub</code><a href="https://github.com/">官网</a>进行注册<br>进去后点击<code>Sign up</code>进行注册，在这里我将不带大家注册了</p></blockquote><p>注册成功后我们来新建一个项目 点击<code>new</code></p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316110716.png" alt="20190316110716"></p><p>输入名称 <code>hello-world</code> <code>Description</code>描述我就不填了 选<code>public</code>公开 然后点击<code>Create repository</code></p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316112531.png" alt="20190316112531"></p><p>创建好后我们复制这个链接后面要用到</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316113254.png" alt="20190316113254"></p><h3 id="三、把项目克隆到本地"><a href="#三、把项目克隆到本地" class="headerlink" title="三、把项目克隆到本地"></a>三、把项目克隆到本地</h3><p>把远程项目克隆到本地使用<code>git clone 项目地址</code>命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone Your url  &#x2F;&#x2F; Your url 这里是要克隆项目的地址 就是刚刚我们复制的</span><br></pre></td></tr></table></figure><p>我们选择一个存放的目录 执行 <code>git clone https://github.com/WeiLin-Liao/hello-world.git</code> 把项目克隆到本地</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316120657.png" alt="20190316120657"></p><p>克隆成功后目录下将会出现一个文件夹</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316120945.png" alt="20190316120945"></p><h3 id="四、创建文件并推送"><a href="#四、创建文件并推送" class="headerlink" title="四、创建文件并推送"></a>四、创建文件并推送</h3><blockquote><p>我们输入 <code>echo &quot;hello-world&quot; &gt;&gt; README.md</code>创建一个文件<br>输入<code>dir</code>来查看目录下的文件列表</p></blockquote><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316122304.png" alt="20190316122304"></p><p>可以看到目录多了一个<code>README.md</code></p><blockquote><p>首先我们使用<code>git status</code>来查看当前所在的分支<br>可以看到当前位于<code>master</code>分支 并且没有提交 现在我们来把刚刚创建的文件提交一下<br>使用<code>git add README.md</code>来添加单个文件 或者使用<code>git add.</code>代表添加目录下的所以文件<br>使用<code>git commit -m &quot;输入提交的注释说明&quot;</code>来添加到待提交<br>使用<code>git push origin master</code> 来推送到项目的主分支<code>master</code>上</p></blockquote><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316130542.png" alt="20190316130542"></p><p>此时项目已经提交上去了</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316130643.png" alt="20190316130643"></p><p>注意：以上操作可能会弹出<code>GitHub</code>登录界面直接登录就行</p><h3 id="五、创建新分支"><a href="#五、创建新分支" class="headerlink" title="五、创建新分支"></a>五、创建新分支</h3><blockquote><p>在现实开发当中我们往往有些项目需要更新迭代为了能和老版本区分开来这是我们可以创建新的分支<br>使用<code>git checkout -b 分支名称</code>创建新的分支<br>可以使用<code>git branch -a</code>来查看所有分支<br>我们这里新增一个文件并推送到刚刚创建的<code>production</code>分支上去</p></blockquote><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316152149.png" alt="20190316152149"></p><p>此时我们打开<code>github</code>可以看到多了一个分支</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316152601.png" alt="20190316152601"></p><h3 id="六、合并分支"><a href="#六、合并分支" class="headerlink" title="六、合并分支"></a>六、合并分支</h3><blockquote><p>我们先切换到需要合并分支的代码中去<br>使用<code>git checkout 分支名</code>切换到<code>master</code>分支<br>使用<code>git merge 分支名</code>合并分支</p></blockquote><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316154212.png" alt="20190316154212"></p><h3 id="七、删除分支"><a href="#七、删除分支" class="headerlink" title="七、删除分支"></a>七、删除分支</h3><blockquote><p>删除分支使用<code>git branch -d 分支名</code><br>删除后使用<code>git push origin :production</code> 冒号代表本地为空的意思 提交至仓库</p></blockquote><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316155107.png" alt="20190316155107"></p><p>此时<code>GitHub</code>只剩下一个分支了</p><p><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316155216.png" alt="20190316155216"></p><h3 id="八、回退版本"><a href="#八、回退版本" class="headerlink" title="八、回退版本"></a>八、回退版本</h3><p>使用<code>git reflog</code>命令打开提交日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">5404fae (HEAD -&gt; master, origin&#x2F;master) HEAD@&#123;0&#125;: merge production: Fast-forward</span><br><span class="line">c6c1467 HEAD@&#123;1&#125;: checkout: moving from production to master</span><br><span class="line">5404fae (HEAD -&gt; master, origin&#x2F;master) HEAD@&#123;2&#125;: commit: 测试分支</span><br><span class="line">c6c1467 HEAD@&#123;3&#125;: checkout: moving from master to production</span><br><span class="line">c6c1467 HEAD@&#123;4&#125;: commit (initial): 第一次提交</span><br></pre></td></tr></table></figure></p><p>使用<code>git reset--hard id</code>来进行回退<br>id这里输入要回退的版本号<br><img src="https://reself.oss-cn-beijing.aliyuncs.com/coding.me/20190316171359.png" alt="20190316171359"></p>]]></content>
    
    <summary type="html">
    
      这篇文章将教会你如何管理项目推送至远程仓库进行管理
    
    </summary>
    
    
      <category term="前端笔记" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Git" scheme="https://weilin-liao.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/Git/"/>
    
    
      <category term="Git" scheme="https://weilin-liao.github.io/tags/Git/"/>
    
  </entry>
  
</feed>
